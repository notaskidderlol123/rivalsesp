local camera = game.Workspace.CurrentCamera
local players = game:GetService("Players")
local localPlayer = players.LocalPlayer
local runService = game:GetService("RunService")

-- New Box ESP function (Restored Original Logic)
local function DrawESP(plr)
    local Box = Drawing.new("Quad")
    Box.Visible = false
    Box.Color = Color3.fromRGB(255, 255, 255)
    Box.Thickness = 1
    Box.Transparency = 1

    local name = Drawing.new("Text")
    name.Size = 18
    name.Color = Color3.fromRGB(255, 255, 255)
    name.Outline = true
    name.Visible = false

    local distance = Drawing.new("Text")
    distance.Size = 16
    distance.Color = Color3.fromRGB(255, 255, 255)
    distance.Outline = true
    distance.Visible = false

    local healthBar = Drawing.new("Line")
    healthBar.Thickness = 3
    healthBar.Visible = false

    local tracer = Drawing.new("Line")
    tracer.Color = Color3.fromRGB(0, 255, 0)
    tracer.Thickness = 1
    tracer.Visible = false

    local bones = {
        {"Head", "UpperTorso"}, {"UpperTorso", "LowerTorso"},
        {"LowerTorso", "LeftUpperLeg"}, {"LeftUpperLeg", "LeftLowerLeg"}, {"LeftLowerLeg", "LeftFoot"},
        {"LowerTorso", "RightUpperLeg"}, {"RightUpperLeg", "RightLowerLeg"}, {"RightLowerLeg", "RightFoot"},
        {"UpperTorso", "LeftUpperArm"}, {"LeftUpperArm", "LeftLowerArm"}, {"LeftLowerArm", "LeftHand"},
        {"UpperTorso", "RightUpperArm"}, {"RightUpperArm", "RightLowerArm"}, {"RightLowerArm", "RightHand"}
    }

    local skeleton = {}
    for _, pair in ipairs(bones) do
        local line = Drawing.new("Line")
        line.Color = Color3.fromRGB(255, 165, 0)
        line.Thickness = 2
        line.Visible = false
        skeleton[pair[1] .. pair[2]] = line
    end

    local function Update()
        local c
        c = runService.RenderStepped:Connect(function()
            if plr.Character and plr.Character.PrimaryPart and plr.Character:FindFirstChildOfClass("Humanoid").Health > 0 then
                local pos, vis = camera:WorldToViewportPoint(plr.Character.PrimaryPart.Position)
                if vis then 
                    local TopLeft = camera:WorldToViewportPoint((plr.Character.PrimaryPart.CFrame * CFrame.new(-2, 3, 0)).p)
                    local TopRight = camera:WorldToViewportPoint((plr.Character.PrimaryPart.CFrame * CFrame.new(2, 3, 0)).p)
                    local BottomLeft = camera:WorldToViewportPoint((plr.Character.PrimaryPart.CFrame * CFrame.new(-2, -3, 0)).p)
                    local BottomRight = camera:WorldToViewportPoint((plr.Character.PrimaryPart.CFrame * CFrame.new(2, -3, 0)).p)

                    Box.PointA = Vector2.new(TopRight.X, TopRight.Y)
                    Box.PointB = Vector2.new(TopLeft.X, TopLeft.Y)
                    Box.PointC = Vector2.new(BottomLeft.X, BottomLeft.Y)
                    Box.PointD = Vector2.new(BottomRight.X, BottomRight.Y)
                    Box.Visible = true

                    name.Position = Vector2.new(TopRight.X, TopRight.Y - 20)
                    name.Text = plr.Name
                    name.Visible = true

                    local playerDistance = (localPlayer.Character.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude
                    distance.Position = Vector2.new(BottomRight.X, BottomRight.Y + 5)
                    distance.Text = tostring(math.floor(playerDistance)) .. "m"
                    distance.Visible = true

                    local humanoid = plr.Character:FindFirstChildOfClass("Humanoid")
                    if humanoid then
                        local healthPercent = humanoid.Health / humanoid.MaxHealth
                        healthBar.From = Vector2.new(BottomRight.X + 5, BottomRight.Y)
                        healthBar.To = Vector2.new(BottomRight.X + 5, TopRight.Y + ((BottomRight.Y - TopRight.Y) * (1 - healthPercent)))
                        healthBar.Color = Color3.fromRGB(0, 255, 0)
                        healthBar.Visible = true
                    end

                    tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y)
                    tracer.To = Vector2.new(BottomRight.X, BottomRight.Y)
                    tracer.Visible = true

                    for _, pair in ipairs(bones) do
                        local p1 = plr.Character:FindFirstChild(pair[1])
                        local p2 = plr.Character:FindFirstChild(pair[2])
                        if p1 and p2 then
                            local screenP1, vis1 = camera:WorldToViewportPoint(p1.Position)
                            local screenP2, vis2 = camera:WorldToViewportPoint(p2.Position)
                            if vis1 and vis2 then
                                local boneLine = skeleton[pair[1] .. pair[2]]
                                boneLine.From = Vector2.new(screenP1.X, screenP1.Y)
                                boneLine.To = Vector2.new(screenP2.X, screenP2.Y)
                                boneLine.Visible = true
                            else
                                skeleton[pair[1] .. pair[2]].Visible = false
                            end
                        end
                    end
                else
                    Box.Visible = false
                    name.Visible = false
                    distance.Visible = false
                    healthBar.Visible = false
                    tracer.Visible = false
                    for _, line in pairs(skeleton) do
                        line.Visible = false
                    end
                end
            else
                Box.Visible = false
                name.Visible = false
                distance.Visible = false
                healthBar.Visible = false
                tracer.Visible = false
                for _, line in pairs(skeleton) do
                    line.Visible = false
                end
                if not players:FindFirstChild(plr.Name) then
                    c:Disconnect()
                end
            end
        end)
    end
    coroutine.wrap(Update)()
end

local function createESP(player)
    if player == localPlayer then return end
    DrawESP(player)
end

for _, player in pairs(players:GetPlayers()) do
    if player ~= localPlayer then
        createESP(player)
    end
end

players.PlayerAdded:Connect(function(player)
    wait(1)
    createESP(player)
end)
