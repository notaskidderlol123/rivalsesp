local camera = game.Workspace.CurrentCamera
local players = game:GetService("Players")
local localPlayer = players.LocalPlayer
local runService = game:GetService("RunService")

local function createESP(player)
    if player == localPlayer then return end
    
    local esp = {}

    -- Box ESP
    esp.box = Drawing.new("Square")
    esp.box.Color = Color3.fromRGB(0, 255, 255) -- Cyan box
    esp.box.Thickness = 1
    esp.box.Filled = false
    esp.box.Visible = false
    
    -- Name
    esp.name = Drawing.new("Text")
    esp.name.Size = 18
    esp.name.Color = Color3.fromRGB(255, 255, 255)
    esp.name.Outline = true
    esp.name.Visible = false

    -- Distance
    esp.distance = Drawing.new("Text")
    esp.distance.Size = 16
    esp.distance.Color = Color3.fromRGB(255, 255, 255)
    esp.distance.Outline = true
    esp.distance.Visible = false

    -- Health bar
    esp.healthBar = Drawing.new("Line")
    esp.healthBar.Thickness = 5
    esp.healthBar.Visible = false

    -- Tracer line
    esp.tracer = Drawing.new("Line")
    esp.tracer.Color = Color3.fromRGB(0, 255, 0)
    esp.tracer.Thickness = 1
    esp.tracer.Visible = false

    -- Head Circle ESP
    esp.headCircle = Drawing.new("Circle")
    esp.headCircle.Color = Color3.fromRGB(255, 165, 0) -- Orange
    esp.headCircle.Thickness = 2
    esp.headCircle.Filled = false
    esp.headCircle.Visible = false

    -- Skeleton/Bone ESP
    local bones = {
        {"Head", "UpperTorso"},
        {"UpperTorso", "LowerTorso"},
        {"UpperTorso", "LeftUpperArm"}, {"LeftUpperArm", "LeftLowerArm"}, {"LeftLowerArm", "LeftHand"},
        {"UpperTorso", "RightUpperArm"}, {"RightUpperArm", "RightLowerArm"}, {"RightLowerArm", "RightHand"},
        {"LowerTorso", "LeftUpperLeg"}, {"LeftUpperLeg", "LeftLowerLeg"}, {"LeftLowerLeg", "LeftFoot"},
        {"LowerTorso", "RightUpperLeg"}, {"RightUpperLeg", "RightLowerLeg"}, {"RightLowerLeg", "RightFoot"}
    }

    esp.skeleton = {}
    for i = 1, #bones do
        local line = Drawing.new("Line")
        line.Color = Color3.fromRGB(255, 165, 0) -- Orange
        line.Thickness = 2
        line.Visible = false
        esp.skeleton[i] = line
    end

    -- Function to update ESP
    local function updateESP()
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local rootPart = player.Character.HumanoidRootPart
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            local vector, onScreen = camera:WorldToViewportPoint(rootPart.Position)
            
            if onScreen then
                local head = player.Character:FindFirstChild("Head")
                local torso = player.Character:FindFirstChild("UpperTorso")
                local leg = player.Character:FindFirstChild("LowerTorso")
                local leftArm = player.Character:FindFirstChild("LeftUpperArm")
                local rightArm = player.Character:FindFirstChild("RightUpperArm")

                if head and torso and leg and leftArm and rightArm then
                    local headPos = camera:WorldToViewportPoint(head.Position)
                    local torsoPos = camera:WorldToViewportPoint(torso.Position)
                    local legPos = camera:WorldToViewportPoint(leg.Position)
                    local leftArmPos = camera:WorldToViewportPoint(leftArm.Position)
                    local rightArmPos = camera:WorldToViewportPoint(rightArm.Position)

                    -- Box ESP (Combined approach)
                    local boxHeight = (headPos.Y - legPos.Y) * 1.7
                    local boxWidth = math.max((rightArmPos.X - leftArmPos.X) * 1.4, boxHeight * 0.6)
                    local boxPosition = Vector2.new(torsoPos.X - boxWidth / 2, torsoPos.Y - boxHeight / 2 + 10)

                    esp.box.Size = Vector2.new(boxWidth, boxHeight)
                    esp.box.Position = boxPosition
                    esp.box.Visible = true

                    -- Head Circle
                    esp.headCircle.Position = Vector2.new(headPos.X, headPos.Y)
                    esp.headCircle.Radius = math.abs(headPos.Y - torsoPos.Y) * 0.25
                    esp.headCircle.Visible = true

                    -- Name
                    esp.name.Position = Vector2.new(vector.X, vector.Y - 60)
                    esp.name.Text = player.Name
                    esp.name.Visible = true

                    -- Distance
                    local distance = (localPlayer.Character.HumanoidRootPart.Position - rootPart.Position).Magnitude
                    esp.distance.Position = Vector2.new(vector.X, vector.Y - 40)
                    esp.distance.Text = tostring(math.floor(distance)) .. "m"
                    esp.distance.Visible = true

                    -- Health bar
                    if humanoid then
                        local healthPercent = humanoid.Health / humanoid.MaxHealth
                        esp.healthBar.From = Vector2.new(boxPosition.X - 8, boxPosition.Y + boxHeight)
                        esp.healthBar.To = Vector2.new(boxPosition.X - 8, boxPosition.Y + boxHeight * (1 - healthPercent))
                        esp.healthBar.Color = Color3.fromRGB(0, 255, 0)
                        esp.healthBar.Visible = true
                    end

                    -- Tracer line
                    esp.tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y)
                    esp.tracer.To = Vector2.new(vector.X, vector.Y + 50)
                    esp.tracer.Visible = true

                    -- Skeleton/Bone ESP
                    local function drawBone(from, to, index)
                        if player.Character:FindFirstChild(from) and player.Character:FindFirstChild(to) then
                            local fromPos = camera:WorldToViewportPoint(player.Character[from].Position)
                            local toPos = camera:WorldToViewportPoint(player.Character[to].Position)
                            esp.skeleton[index].From = Vector2.new(fromPos.X, fromPos.Y)
                            esp.skeleton[index].To = Vector2.new(toPos.X, toPos.Y)
                            esp.skeleton[index].Visible = true
                        else
                            esp.skeleton[index].Visible = false
                        end
                    end

                    for i, bone in ipairs(bones) do
                        drawBone(bone[1], bone[2], i)
                    end
                end
            else
                esp.box.Visible = false
                esp.headCircle.Visible = false
                esp.name.Visible = false
                esp.distance.Visible = false
                esp.healthBar.Visible = false
                esp.tracer.Visible = false
                for _, bone in pairs(esp.skeleton) do
                    bone.Visible = false
                end
            end
        else
            esp.box.Visible = false
            esp.headCircle.Visible = false
            esp.name.Visible = false
            esp.distance.Visible = false
            esp.healthBar.Visible = false
            esp.tracer.Visible = false
            for _, bone in pairs(esp.skeleton) do
                bone.Visible = false
            end
        end
    end

    runService.RenderStepped:Connect(updateESP)
end

-- Add ESP to all players
for _, player in pairs(players:GetPlayers()) do
    if player ~= localPlayer then
        createESP(player)
    end
end

players.PlayerAdded:Connect(function(player)
    wait(1)
    createESP(player)
end)
