local camera = game.Workspace.CurrentCamera
local players = game:GetService("Players")
local localPlayer = players.LocalPlayer
local runService = game:GetService("RunService")

local function createESP(player)
    if player == localPlayer then return end
    
    local esp = {}

    -- Box ESP
    esp.box = Drawing.new("Square")
    esp.box.Color = Color3.fromRGB(0, 255, 255) -- Cyan box
    esp.box.Thickness = 1
    esp.box.Filled = false
    esp.box.Visible = false
    
    -- Name
    esp.name = Drawing.new("Text")
    esp.name.Size = 18
    esp.name.Color = Color3.fromRGB(255, 255, 255)
    esp.name.Outline = true
    esp.name.Visible = false

    -- Distance
    esp.distance = Drawing.new("Text")
    esp.distance.Size = 16
    esp.distance.Color = Color3.fromRGB(255, 255, 255)
    esp.distance.Outline = true
    esp.distance.Visible = false

    -- Health bar (Increased size)
    esp.healthBar = Drawing.new("Line")
    esp.healthBar.Thickness = 8 -- Increased from 5 to 8
    esp.healthBar.Visible = false

    -- Tracer line
    esp.tracer = Drawing.new("Line")
    esp.tracer.Color = Color3.fromRGB(0, 255, 0)
    esp.tracer.Thickness = 1
    esp.tracer.Visible = false

    -- Skeleton/Bone ESP
    local bones = {
        "Head", "UpperTorso", "LowerTorso",
        "LeftUpperArm", "LeftLowerArm", "LeftHand",
        "RightUpperArm", "RightLowerArm", "RightHand",
        "LeftUpperLeg", "LeftLowerLeg", "LeftFoot",
        "RightUpperLeg", "RightLowerLeg", "RightFoot"
    }

    esp.skeleton = {}
    for i = 1, #bones do
        local line = Drawing.new("Line")
        line.Color = Color3.fromRGB(255, 165, 0) -- Orange
        line.Thickness = 2
        line.Visible = false
        esp.skeleton[bones[i]] = line
    end

    -- Function to update ESP
    local function updateESP()
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local rootPart = player.Character.HumanoidRootPart
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            local vector, onScreen = camera:WorldToViewportPoint(rootPart.Position)
            
            if onScreen then
                local head = player.Character:FindFirstChild("Head")
                local torso = player.Character:FindFirstChild("UpperTorso")
                local leg = player.Character:FindFirstChild("LowerTorso")
                local leftArm = player.Character:FindFirstChild("LeftUpperArm")
                local rightArm = player.Character:FindFirstChild("RightUpperArm")

                if head and torso and leg and leftArm and rightArm then
                    local headPos = camera:WorldToViewportPoint(head.Position)
                    local torsoPos = camera:WorldToViewportPoint(torso.Position)

                    -- Box ESP spanning from feet to head, staying on the player, wider and taller
                    local lowerTorsoPos = camera:WorldToViewportPoint(leg.Position) -- Using LowerTorso as "feet"
                    local boxHeight = math.abs(headPos.Y - lowerTorsoPos.Y) * 1.2 -- Increased height by 20% (taller)
                    local boxWidth = boxHeight * 0.8 -- Increased width (from 0.6 to 0.8, wider)
                    local boxPosition = Vector2.new(
                        torsoPos.X - boxWidth / 2,  -- Center horizontally on torso
                        lowerTorsoPos.Y - (boxHeight * 0.1) -- Start slightly below feet, adjusted for taller height
                    )

                    esp.box.Size = Vector2.new(boxWidth, boxHeight)
                    esp.box.Position = boxPosition
                    esp.box.Visible = true

                    -- Name
                    esp.name.Position = Vector2.new(vector.X, vector.Y - 60)
                    esp.name.Text = player.Name
                    esp.name.Visible = true

                    -- Distance
                    local playerDistance = (localPlayer.Character.HumanoidRootPart.Position - rootPart.Position).Magnitude
                    esp.distance.Position = Vector2.new(vector.X, vector.Y - 40)
                    esp.distance.Text = tostring(math.floor(playerDistance)) .. "m"
                    esp.distance.Visible = true

                    -- Health bar (Increased size and adjusted position)
                    if humanoid then
                        local healthPercent = humanoid.Health / humanoid.MaxHealth
                        esp.healthBar.From = Vector2.new(boxPosition.X - 12, boxPosition.Y + boxHeight) -- Shifted further left
                        esp.healthBar.To = Vector2.new(boxPosition.X - 12, boxPosition.Y + boxHeight * (1 - healthPercent))
                        esp.healthBar.Color = Color3.fromRGB(0, 255, 0) -- Green for health
                        esp.healthBar.Visible = true
                    end

                    -- Tracer line
                    esp.tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y)
                    esp.tracer.To = Vector2.new(vector.X, vector.Y + 50)
                    esp.tracer.Visible = true

                    -- Skeleton/Bone ESP
                    local function drawBone(from, to)
                        if player.Character:FindFirstChild(from) and player.Character:FindFirstChild(to) then
                            local fromPos = camera:WorldToViewportPoint(player.Character[from].Position)
                            local toPos = camera:WorldToViewportPoint(player.Character[to].Position)
                            esp.skeleton[from].From = Vector2.new(fromPos.X, fromPos.Y)
                            esp.skeleton[from].To = Vector2.new(toPos.X, toPos.Y)
                            esp.skeleton[from].Visible = true
                        else
                            esp.skeleton[from].Visible = false
                        end
                    end

                    drawBone("Head", "UpperTorso")
                    drawBone("UpperTorso", "LowerTorso")
                    drawBone("UpperTorso", "LeftUpperArm")
                    drawBone("LeftUpperArm", "LeftLowerArm")
                    drawBone("LeftLowerArm", "LeftHand")
                    drawBone("UpperTorso", "RightUpperArm")
                    drawBone("RightUpperArm", "RightLowerArm")
                    drawBone("RightLowerArm", "RightHand")
                    drawBone("LowerTorso", "LeftUpperLeg")
                    drawBone("LeftUpperLeg", "LeftLowerLeg")
                    drawBone("LeftLowerLeg", "LeftFoot")
                    drawBone("LowerTorso", "RightUpperLeg")
                    drawBone("RightUpperLeg", "RightLowerLeg")
                    drawBone("RightLowerLeg", "RightFoot")
                end
            else
                esp.box.Visible = false
                esp.name.Visible = false
                esp.distance.Visible = false
                esp.healthBar.Visible = false
                esp.tracer.Visible = false
                for _, bone in pairs(esp.skeleton) do
                    bone.Visible = false
                end
            end
        else
            esp.box.Visible = false
            esp.name.Visible = false
            esp.distance.Visible = false
            esp.healthBar.Visible = false
            esp.tracer.Visible = false
            for _, bone in pairs(esp.skeleton) do
                bone.Visible = false
            end
        end
    end

    runService.RenderStepped:Connect(updateESP)
end

-- Add ESP to all players
for _, player in pairs(players:GetPlayers()) do
    if player ~= localPlayer then
        createESP(player)
    end
end

players.PlayerAdded:Connect(function(player)
    wait(1)
    createESP(player)
end)
