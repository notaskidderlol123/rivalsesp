local camera = game.Workspace.CurrentCamera
local players = game:GetService("Players")
local localPlayer = players.LocalPlayer
local runService = game:GetService("RunService")

local function createESP(player)
    if player == localPlayer then return end
    
    local esp = {}

    -- 2D Box ESP
    esp.box2D = Drawing.new("Square")
    esp.box2D.Color = Color3.fromRGB(255, 255, 255) -- White box
    esp.box2D.Thickness = 1
    esp.box2D.Filled = false
    esp.box2D.Visible = false
    
    -- Name
    esp.name = Drawing.new("Text")
    esp.name.Size = 18
    esp.name.Color = Color3.fromRGB(255, 255, 255) -- White text
    esp.name.Outline = true
    esp.name.Visible = false

    -- Health bar
    esp.healthBar = Drawing.new("Line")
    esp.healthBar.Thickness = 8
    esp.healthBar.Visible = false

    -- 3D Box ESP
    esp.box3D = nil -- We'll calculate 3D box position later

    -- Function to update ESP
    local function updateESP()
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local rootPart = player.Character.HumanoidRootPart
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            local vector, onScreen = camera:WorldToViewportPoint(rootPart.Position)
            
            if onScreen then
                local head = player.Character:FindFirstChild("Head")
                local torso = player.Character:FindFirstChild("UpperTorso")
                local leg = player.Character:FindFirstChild("LowerTorso")

                if head and torso and leg then
                    local headPos = camera:WorldToViewportPoint(head.Position)
                    local torsoPos = camera:WorldToViewportPoint(torso.Position)

                    -- 2D Box ESP
                    local lowerTorsoPos = camera:WorldToViewportPoint(leg.Position) -- Using LowerTorso as "feet"
                    local boxHeight = math.abs(headPos.Y - lowerTorsoPos.Y) * 2.0 -- Increased height by 100% (taller)
                    local boxWidth = boxHeight * 1.2 -- Increased width to match height proportion (wider)
                    local boxPosition = Vector2.new(
                        torsoPos.X - boxWidth / 2,  -- Center horizontally on torso
                        lowerTorsoPos.Y - (boxHeight * 0.1) -- Start slightly below feet, adjusted for taller height
                    )

                    esp.box2D.Size = Vector2.new(boxWidth, boxHeight)
                    esp.box2D.Position = boxPosition
                    esp.box2D.Visible = true

                    -- Name
                    esp.name.Position = Vector2.new(vector.X, vector.Y - 60)
                    esp.name.Text = player.Name
                    esp.name.Visible = true

                    -- Health bar (Increased size and adjusted position)
                    if humanoid then
                        local healthPercent = humanoid.Health / humanoid.MaxHealth
                        esp.healthBar.From = Vector2.new(boxPosition.X - 12, boxPosition.Y + boxHeight) -- Shifted further left
                        esp.healthBar.To = Vector2.new(boxPosition.X - 12, boxPosition.Y + boxHeight * (1 - healthPercent))
                        esp.healthBar.Color = Color3.fromRGB(0, 255, 0) -- Green for health
                        esp.healthBar.Visible = true
                    end

                    -- 3D Box ESP (Simple 3D Box Representation)
                    local function draw3DBox()
                        -- Define vertices (Corners of the box)
                        local size = Vector3.new(boxWidth, boxHeight, boxWidth)
                        local offset = rootPart.Position - Vector3.new(0, size.Y / 2, 0)

                        -- Calculate corners of the 3D box
                        local frontTopLeft = camera:WorldToViewportPoint(offset + Vector3.new(-size.X/2, size.Y/2, size.Z/2))
                        local frontTopRight = camera:WorldToViewportPoint(offset + Vector3.new(size.X/2, size.Y/2, size.Z/2))
                        local frontBottomLeft = camera:WorldToViewportPoint(offset + Vector3.new(-size.X/2, -size.Y/2, size.Z/2))
                        local frontBottomRight = camera:WorldToViewportPoint(offset + Vector3.new(size.X/2, -size.Y/2, size.Z/2))
                        local backTopLeft = camera:WorldToViewportPoint(offset + Vector3.new(-size.X/2, size.Y/2, -size.Z/2))
                        local backTopRight = camera:WorldToViewportPoint(offset + Vector3.new(size.X/2, size.Y/2, -size.Z/2))
                        local backBottomLeft = camera:WorldToViewportPoint(offset + Vector3.new(-size.X/2, -size.Y/2, -size.Z/2))
                        local backBottomRight = camera:WorldToViewportPoint(offset + Vector3.new(size.X/2, -size.Y/2, -size.Z/2))

                        -- Draw lines connecting corners to form the box
                        local function drawLine(fromPos, toPos)
                            local line = Drawing.new("Line")
                            line.Color = Color3.fromRGB(255, 255, 255)
                            line.Thickness = 2
                            line.From = fromPos
                            line.To = toPos
                            line.Visible = true
                            return line
                        end

                        -- Draw front and back faces of the 3D box
                        local frontLines = {
                            drawLine(frontTopLeft, frontTopRight),
                            drawLine(frontTopRight, frontBottomRight),
                            drawLine(frontBottomRight, frontBottomLeft),
                            drawLine(frontBottomLeft, frontTopLeft)
                        }

                        local backLines = {
                            drawLine(backTopLeft, backTopRight),
                            drawLine(backTopRight, backBottomRight),
                            drawLine(backBottomRight, backBottomLeft),
                            drawLine(backBottomLeft, backTopLeft)
                        }

                        -- Connect front to back
                        drawLine(frontTopLeft, backTopLeft)
                        drawLine(frontTopRight, backTopRight)
                        drawLine(frontBottomLeft, backBottomLeft)
                        drawLine(frontBottomRight, backBottomRight)
                    end

                    draw3DBox()

                end
            else
                esp.box2D.Visible = false
                esp.name.Visible = false
                esp.healthBar.Visible = false
            end
        else
            esp.box2D.Visible = false
            esp.name.Visible = false
            esp.healthBar.Visible = false
        end
    end

    runService.RenderStepped:Connect(updateESP)
end

-- Add ESP to all players
for _, player in pairs(players:GetPlayers()) do
    if player ~= localPlayer then
        createESP(player)
    end
end

players.PlayerAdded:Connect(function(player)
    wait(1)
    createESP(player)
end)
